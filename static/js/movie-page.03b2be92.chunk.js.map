{"version":3,"file":"static/js/movie-page.03b2be92.chunk.js","mappings":"2NAGaA,EAAYC,EAAAA,GAAAA,GAAH,kWAgBTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+GAMVG,EAAWH,EAAAA,GAAAA,IAAH,6EAKRI,EAAYJ,EAAAA,GAAAA,IAAH,kHAMTK,EAAaL,EAAAA,GAAAA,GAAH,kFAKVM,EAAYN,EAAAA,GAAAA,IAAH,+F,SC9BTO,EAAY,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC3DC,GAAWC,EAAAA,EAAAA,MAEjB,OACC,SAACf,EAAD,WACC,UAACE,EAAD,CAAYc,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMJ,GAAhD,WACC,0BACC,SAACV,EAAD,CACCe,IAAG,0CAAqCR,GACxCS,IAAG,UAAKV,EAAL,gBAGL,UAACL,EAAD,YACC,SAACC,EAAD,UAAaI,KACb,UAACH,EAAD,YACC,kCAAUM,MACV,oCAAYD,iBCzBLS,EAAapB,EAAAA,GAAAA,GAAH,qHCEVqB,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACC,SAACF,EAAD,UACEE,EAAOC,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,KAAMf,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAA/C,OACX,SAACL,EAAD,CAECC,GAAIA,EACJC,WAAYe,GAAgBE,EAC5BhB,OAAQe,EACRd,aAAcA,EACdC,WAAYA,GALPJ,U,uHCPGmB,EAAO3B,EAAAA,GAAAA,KAAH,uIAOJ4B,EAAc5B,EAAAA,GAAAA,MAAH,kQAeX6B,EAAe7B,EAAAA,GAAAA,OAAH,kY,SCpBZ8B,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,OACC,UAACP,EAAD,CAAMQ,SAXc,SAAAC,GAGpB,GAFAA,EAAEC,iBAEmB,KAAjBJ,EAAMK,OAAV,CAGA,IAAMC,EAAYN,EAAMO,cACxBT,EAASQ,KAIT,WACC,SAACX,EAAD,CACCa,KAAK,OACLR,MAAOA,EACPS,SAAU,SAAAN,GAAC,OAAIF,EAASE,EAAEO,OAAOV,WAClC,SAACJ,EAAD,CAAcY,KAAK,SAAnB,wBCnBY,SAASG,IACvB,OAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeuB,EAAf,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcf,EAAd,KAWA,OATAgB,EAAAA,EAAAA,YAAU,WAEK,KAAVD,GACHE,MAAM,qDAAD,OAFU,mCAEV,iCAAsFF,EAAtF,gCACHG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA3B,GAAM,OAAIuB,EAAUvB,EAAO8B,cAEjC,CAACN,KAGH,iCACC,SAAChB,EAAD,CAAYC,SAAUA,IACrBT,EAAO+B,OAAS,IAAK,SAAChC,EAAA,EAAD,CAAWC,OAAQA","sources":["components/MoviesList/MovieItem.styled.js","components/MoviesList/MovieItem.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieCard = styled.li`\n\tmax-width: 300px;\n\tmargin: 5px;\n\n\tbackground-color: rgba(0, 0, 0, 0.07);\n\tborder: 1px solid #eeeeee;\n\tborder-top: none;\n\tborder-radius: 10px;\n\toverflow: hidden;\n\t:hover{\n\t\tbox-shadow:\n\t\t0px 1px 1px rgba(255, 0, 0, 0.12),\n\t\t0px 4px 4px rgba(255, 0, 0, 0.16),\n\t\t1px 4px 6px rgba(255, 0, 0, 0.26);\n\t}\n`\nexport const CustomLink = styled(Link)`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: #000;\n\ttext-decoration: none;\n`\nexport const MovieImg = styled.img`\n\tdisplay: block;\n\twidth: 100%;\n\theight: 450px;\n`\nexport const MovieText = styled.div`\n\tpadding-top: 5px;\n\tpadding-bottom: 5px;\n\tpadding-left: 5px;\n\tpadding-right: 5px;\n`\nexport const MovieTitle = styled.h3`\n\twidth: 250px;\n\tfont-weight: 700;\n\tfont-size: 18px;\n`\nexport const MovieVote = styled.div`\ndisplay: flex;\nflex-direction: row;\njustify-content: space-between;\n`","import PropTypes from \"prop-types\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n\tMovieCard,\n\tCustomLink,\n\tMovieText,\n\tMovieTitle,\n\tMovieVote,\n\tMovieImg,\n} from './MovieItem.styled';\n\nexport const MovieItem = ({ id, movieTitle, poster, vote_average, vote_count }) => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<MovieCard>\n\t\t\t<CustomLink to={`/movies/${id}`} state={{ from: location }}>\n\t\t\t\t<div>\n\t\t\t\t\t<MovieImg\n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${poster}`}\n\t\t\t\t\t\talt={`${movieTitle} poster`} />\n\t\t\t\t</div>\n\n\t\t\t\t<MovieText>\n\t\t\t\t\t<MovieTitle>{movieTitle}</MovieTitle>\n\t\t\t\t\t<MovieVote>\n\t\t\t\t\t\t<p>Voted:{vote_count}</p>\n\t\t\t\t\t\t<p>Average:{vote_average}</p>\n\t\t\t\t\t</MovieVote>\n\t\t\t\t</MovieText>\n\t\t\t</CustomLink>\n\t\t</MovieCard>\n\t)\n}\n\nMovieItem.propTypes = {\n\tid: PropTypes.number.isRequired,\n\tmovieTitle: PropTypes.string.isRequired,\n\tposter: PropTypes.string.isRequired,\n\tvote_average: PropTypes.number.isRequired,\n\tvote_count: PropTypes.number.isRequired,\n}","import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-around;\n\tlist-style: none;\n`","import PropTypes from \"prop-types\";\nimport { MovieItem } from './MovieItem';\nimport { MoviesList } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n\treturn (\n\t\t<MoviesList >\n\t\t\t{movies.map(({ id, title, poster_path, name, vote_average, vote_count }) =>\n\t\t\t\t<MovieItem\n\t\t\t\t\tkey={id}\n\t\t\t\t\tid={id}\n\t\t\t\t\tmovieTitle={title ? title : name}\n\t\t\t\t\tposter={poster_path}\n\t\t\t\t\tvote_average={vote_average}\n\t\t\t\t\tvote_count={vote_count} />\n\t\t\t)}\n\t\t</MoviesList>\n\t)\n}\n\nMovieList.propTypes = {\n\tmovies: PropTypes.arrayOf(PropTypes.object)\n}","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n\tdisplay:flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tcolor: inherit;\n\tborder-radius: 4px;\n`\nexport const SearchInput = styled.input`\n\tcolor: white;\n\tletter-spacing: 1px;\n\tfont-size: 17px;\n\twidth: 50%;\n\tpadding:5px;\n  border-radius:10px;\n\tborder: 2px solid #eee;\n\tbackground: inherit;\n\t\n\t:focus{\n\t\toutline: none;\n\t\tborder-color: darkred;\n\t}\n`\nexport const SearchButton = styled.button`\n\tmargin-left: 15px;\n\tcursor: pointer;\n\tpadding:10px;\n  border:none;\n  background-color:rgb(139,0,0);\n  color:#000;\n  font-weight:600;\n  border-radius:15px;\n\t:hover{\n\t\tbackground-color: rgb(255,0,0);\n\t\tbox-shadow:\n\t\t\t0px 1px 1px rgba(255, 0, 0, 0.2),\n\t\t\t0px 4px 4px rgba(255, 0, 0, 0.25),\n\t\t\t1px 4px 6px rgba(255, 0, 0, 0.33);\n\t}\n`","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Form, SearchInput, SearchButton } from \"./SearchForm.styled\";\n\nexport const SearchForm = ({ setQuery }) => {\n\tconst [value, setValue] = useState('');\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (value.trim() === '') {\n\t\t\treturn\n\t\t}\n\t\tconst normValue = value.toLowerCase();\n\t\tsetQuery(normValue);\n\t}\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit}>\n\t\t\t<SearchInput\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={e => setValue(e.target.value)} />\n\t\t\t<SearchButton type=\"submit\">Search</SearchButton>\n\t\t</Form>\n\t)\n}\nSearchForm.propTypes = {\n\tsetQuery: PropTypes.func.isRequired,\n}","import { useState, useEffect } from \"react\";\nimport { MovieList } from \"../components/MoviesList/MovieList\";\nimport { SearchForm } from \"components/SearchForm/SearchForm\";\n\nexport default function MoviesPage() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [query, setQuery] = useState('');\n\n\tuseEffect(() => {\n\t\tconst API_KEY = '2fcef87760cac0a14e527e71c6ea2c67';\n\t\tif (query !== '') {\n\t\t\tfetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`)\n\t\t\t\t.then(r => r.json())\n\t\t\t\t.then(movies => setMovies(movies.results))\n\t\t}\n\t}, [query])\n\n\treturn (\n\t\t<>\n\t\t\t<SearchForm setQuery={setQuery} />\n\t\t\t{movies.length > 0 && <MovieList movies={movies} />}\n\t\t</>\n\t)\n}"],"names":["MovieCard","styled","CustomLink","Link","MovieImg","MovieText","MovieTitle","MovieVote","MovieItem","id","movieTitle","poster","vote_average","vote_count","location","useLocation","to","state","from","src","alt","MoviesList","MovieList","movies","map","title","poster_path","name","Form","SearchInput","SearchButton","SearchForm","setQuery","useState","value","setValue","onSubmit","e","preventDefault","trim","normValue","toLowerCase","type","onChange","target","MoviesPage","setMovies","query","useEffect","fetch","then","r","json","results","length"],"sourceRoot":""}